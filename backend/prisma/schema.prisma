generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String            @id @default(uuid())
  username         String            @unique
  email            String            @unique
  password         String
  profileImage     String?
  bio              String?
  role             String            @default("user")
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  createdRaces     Race[]
  raceMessages     RaceMessage[]
  raceParticipants RaceParticipant[]
  favorites        Game[]            @relation("UserFavorites")
}

model Game {
  id          String    @id @default(uuid())
  title       String
  cover       String?
  description String?
  releaseDate DateTime?
  platform    String[]
  genre       String[]
  developer   String?
  publisher   String?
  website     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  favoriteBy  User[]    @relation("UserFavorites")
}

model Race {
  id              String            @id @default(uuid())
  gameName        String
  gameId          String
  categoryName    String
  categoryId      String
  objective       String            @default("Meilleur temps")
  status          String            @default("en-attente")
  maxParticipants Int               @default(4)
  password        String?
  startTime       DateTime?
  endTime         DateTime?
  createdById     String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  createdBy       User              @relation(fields: [createdById], references: [id], onDelete: Cascade)
  messages        RaceMessage[]
  participants    RaceParticipant[]
}

model RaceParticipant {
  id         String   @id @default(uuid())
  raceId     String
  userId     String
  status     String   @default("inscrit")
  finishTime Int?
  streamUrl  String?
  position   Int?
  joinedAt   DateTime @default(now())
  race       Race     @relation(fields: [raceId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([raceId, userId])
}

model RaceMessage {
  id        String   @id @default(uuid())
  raceId    String
  userId    String?
  content   String
  type      String   @default("chat")
  createdAt DateTime @default(now())
  race      Race     @relation(fields: [raceId], references: [id], onDelete: Cascade)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
