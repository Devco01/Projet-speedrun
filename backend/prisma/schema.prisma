// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modèle pour les utilisateurs
model User {
  id            String    @id @default(uuid())
  username      String    @unique
  email         String    @unique
  password      String
  profileImage  String?
  bio           String?
  role          String    @default("user") // "user" ou "admin"
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  runs          Run[]
  favorites     Game[]    @relation("UserFavorites")
  comments      Comment[]
}

// Modèle pour les jeux
model Game {
  id            String    @id @default(uuid())
  title         String
  cover         String?
  description   String?
  releaseDate   DateTime?
  platform      String[]
  genre         String[]
  developer     String?
  publisher     String?
  website       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  categories    Category[]
  runs          Run[]
  favoriteBy    User[]    @relation("UserFavorites")
}

// Modèle pour les catégories de speedrun
model Category {
  id            String    @id @default(uuid())
  name          String
  rules         String?
  gameId        String
  game          Game      @relation(fields: [gameId], references: [id])
  runs          Run[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Modèle pour les speedruns
model Run {
  id            String    @id @default(uuid())
  time          Int       // Temps en secondes
  videoUrl      String?
  submittedAt   DateTime  @default(now())
  verifiedAt    DateTime?
  isVerified    Boolean   @default(false)
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  gameId        String
  game          Game      @relation(fields: [gameId], references: [id])
  categoryId    String
  category      Category  @relation(fields: [categoryId], references: [id])
  comments      Comment[]
}

// Modèle pour les commentaires
model Comment {
  id            String    @id @default(uuid())
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  runId         String
  run           Run       @relation(fields: [runId], references: [id])
}

// Modèle pour les événements
model Event {
  id            String    @id @default(uuid())
  name          String
  description   String?
  startDate     DateTime
  endDate       DateTime
  website       String?
  location      String?
  isOnline      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
} 